import React, { useState, useMemo } from "react";

// Single-file React component for a modern, responsive auto-parts storefront (Vietnamese)
// Tailwind CSS assumed available in the project. Default export a React component.

export default function AutoPartsStore() {
  // Sample product data (would normally come from API)
  const initialProducts = [
    { id: 1, name: "Bugi NGK BKR6E", category: "Động cơ", brand: "NGK", price: 120000, stock: 34 },
    { id: 2, name: "Lọc dầu Bosch", category: "Lọc", brand: "Bosch", price: 85000, stock: 50 },
    { id: 3, name: "Má phanh trước Toyota", category: "Phanh", brand: "Denso", price: 420000, stock: 12 },
    { id: 4, name: "Bơm nước ô tô", category: "Làm mát", brand: "Valeo", price: 1250000, stock: 6 },
    { id: 5, name: "Ắc quy 12V 60Ah", category: "Điện", brand: "Varta", price: 1850000, stock: 8 },
    { id: 6, name: "Dầu động cơ 5W-30 4L", category: "Dầu nhớt", brand: "Mobil", price: 620000, stock: 22 },
    { id: 7, name: "Cảm biến oxy (Lambda)", category: "Cảm biến", brand: "Denso", price: 980000, stock: 10 },
    { id: 8, name: "Lọc gió động cơ", category: "Lọc", brand: "Mann", price: 150000, stock: 40 }
  ];

  const categories = ["Tất cả", ...Array.from(new Set(initialProducts.map(p => p.category)))]
  const brands = ["Tất cả", ...Array.from(new Set(initialProducts.map(p => p.brand)))]

  const [products] = useState(initialProducts);
  const [query, setQuery] = useState("");
  const [selectedCategory, setSelectedCategory] = useState("Tất cả");
  const [selectedBrand, setSelectedBrand] = useState("Tất cả");
  const [maxPrice, setMaxPrice] = useState(0);
  const [cart, setCart] = useState([]);
  const [showCart, setShowCart] = useState(false);

  const filtered = useMemo(() => {
    return products.filter(p => {
      if (selectedCategory !== "Tất cả" && p.category !== selectedCategory) return false;
      if (selectedBrand !== "Tất cả" && p.brand !== selectedBrand) return false;
      if (query && !(`${p.name} ${p.brand}`.toLowerCase().includes(query.toLowerCase()))) return false;
      if (maxPrice > 0 && p.price > maxPrice) return false;
      return true;
    })
  }, [products, query, selectedCategory, selectedBrand, maxPrice]);

  function addToCart(product, qty = 1) {
    setCart(prev => {
      const found = prev.find(i => i.id === product.id);
      if (found) return prev.map(i => i.id === product.id ? { ...i, qty: Math.min(i.qty + qty, product.stock) } : i);
      return [...prev, { ...product, qty: Math.min(qty, product.stock) }];
    })
  }

  function updateQty(id, qty) {
    setCart(prev => prev.map(i => i.id === id ? { ...i, qty: Math.max(1, Math.min(qty, i.stock)) } : i))
  }

  function removeFromCart(id) {
    setCart(prev => prev.filter(i => i.id !== id));
  }

  const subtotal = cart.reduce((s, i) => s + i.price * i.qty, 0);

  return (
    <div className="min-h-screen bg-gray-50 text-gray-800">
      <header className="bg-white shadow">
        <div className="max-w-7xl mx-auto px-4 py-4 flex items-center justify-between">
          <div className="flex items-center gap-4">
            <div className="text-2xl font-extrabold text-sky-600">AutoPartsVN</div>
            <nav className="hidden md:flex gap-3 text-sm text-gray-600">
              <a className="hover:underline">Trang chủ</a>
              <a className="hover:underline">Sản phẩm</a>
              <a className="hover:underline">Liên hệ</a>
            </nav>
          </div>

          <div className="flex items-center gap-3">
            <button onClick={() => setShowCart(true)} className="relative">
              <svg xmlns="http://www.w3.org/2000/svg" className="h-6 w-6" fill="none" viewBox="0 0 24 24" stroke="currentColor">
                <path strokeLinecap="round" strokeLinejoin="round" strokeWidth={2} d="M3 3h2l.4 2M7 13h10l4-8H5.4" />
              </svg>
              {cart.length > 0 && <span className="absolute -top-2 -right-2 bg-red-600 text-white rounded-full text-xs px-2">{cart.length}</span>}
            </button>
            <button className="hidden md:inline bg-sky-600 text-white px-3 py-2 rounded">Đăng nhập</button>
          </div>
        </div>
      </header>

      <main className="max-w-7xl mx-auto px-4 py-8">
        {/* Hero */}
        <section className="grid md:grid-cols-3 gap-6 items-center mb-8">
          <div className="md:col-span-2 bg-gradient-to-r from-sky-500 to-cyan-400 text-white p-8 rounded-2xl">
            <h1 className="text-3xl font-bold mb-2">Phụ tùng ô tô chính hãng — Giá tốt, giao nhanh</h1>
            <p className="mb-4">Tìm nhanh phụ tùng cho xe của bạn: bugi, lọc dầu, má phanh, ắc quy, dầu nhớt và nhiều hơn nữa.</p>
            <div className="flex gap-2">
              <input value={query} onChange={e => setQuery(e.target.value)} placeholder="Tìm sản phẩm, thương hiệu..." className="p-3 rounded-md w-full text-gray-800" />
              <button onClick={() => {}} className="bg-white text-sky-600 px-4 rounded-md">Tìm</button>
            </div>
          </div>

          <div className="bg-white p-4 rounded-2xl shadow">
            <h3 className="font-semibold mb-2">Bộ lọc nhanh</h3>
            <div className="mb-3">
              <label className="block text-sm text-gray-600">Danh mục</label>
              <select value={selectedCategory} onChange={e => setSelectedCategory(e.target.value)} className="w-full p-2 mt-1 rounded">
                {categories.map(c => <option key={c} value={c}>{c}</option>)}
              </select>
            </div>
            <div className="mb-3">
              <label className="block text-sm text-gray-600">Thương hiệu</label>
              <select value={selectedBrand} onChange={e => setSelectedBrand(e.target.value)} className="w-full p-2 mt-1 rounded">
                {brands.map(b => <option key={b} value={b}>{b}</option>)}
              </select>
            </div>
            <div>
              <label className="block text-sm text-gray-600">Giá tối đa (VND)</label>
              <input type="number" value={maxPrice} onChange={e => setMaxPrice(Number(e.target.value))} className="w-full p-2 mt-1 rounded" placeholder="0 = không giới hạn" />
            </div>
          </div>
        </section>

        {/* Product list */}
        <section>
          <div className="flex items-center justify-between mb-4">
            <h2 className="text-xl font-semibold">Kết quả ({filtered.length})</h2>
            <div className="text-sm text-gray-600">Tổng tiền giỏ: <strong>{subtotal.toLocaleString()}₫</strong></div>
          </div>

          <div className="grid grid-cols-1 sm:grid-cols-2 lg:grid-cols-3 gap-6">
            {filtered.map(p => (
              <div key={p.id} className="bg-white p-4 rounded-2xl shadow-sm flex flex-col">
                <div className="h-40 flex items-center justify-center bg-gray-100 rounded-md mb-4">
                  <div className="text-sm text-gray-500">Ảnh mẫu: {p.name}</div>
                </div>
                <div className="flex-1">
                  <h3 className="font-semibold">{p.name}</h3>
                  <p className="text-sm text-gray-500">{p.brand} • {p.category}</p>
                </div>
                <div className="mt-4 flex items-center justify-between">
                  <div>
                    <div className="text-lg font-bold">{p.price.toLocaleString()}₫</div>
                    <div className="text-xs text-gray-500">Còn {p.stock} cái</div>
                  </div>
                  <div className="flex gap-2">
                    <button onClick={() => addToCart(p)} className="px-3 py-2 bg-sky-600 text-white rounded-md">Thêm vào giỏ</button>
                    <button className="px-3 py-2 border rounded-md">Xem</button>
                  </div>
                </div>
              </div>
            ))}
          </div>
        </section>

      </main>

      <footer className="bg-white border-t mt-12">
        <div className="max-w-7xl mx-auto px-4 py-6 text-sm text-gray-600 flex justify-between">
          <div>© {new Date().getFullYear()} AutoPartsVN — Phụ tùng ô tô chính hãng</div>
          <div>Liên hệ: 0123-456-789 • support@autoparts.vn</div>
        </div>
      </footer>

      {/* Cart modal */}
      {showCart && (
        <div className="fixed inset-0 bg-black/40 flex items-end md:items-center justify-center z-50">
          <div className="bg-white w-full md:w-3/5 rounded-t-2xl md:rounded-2xl p-6">
            <div className="flex items-center justify-between mb-4">
              <h3 className="text-lg font-semibold">Giỏ hàng ({cart.length})</h3>
              <div className="flex items-center gap-2">
                <div className="text-sm text-gray-600">Tổng: <strong>{subtotal.toLocaleString()}₫</strong></div>
                <button onClick={() => setShowCart(false)} className="px-3 py-1 border rounded">Đóng</button>
              </div>
            </div>

            {cart.length === 0 ? (
              <div className="text-center text-gray-500 py-8">Giỏ hàng trống</div>
            ) : (
              <div className="space-y-4 max-h-96 overflow-auto">
                {cart.map(item => (
                  <div key={item.id} className="flex items-center gap-4">
                    <div className="w-16 h-16 bg-gray-100 rounded flex items-center justify-center text-xs">{item.name}</div>
                    <div className="flex-1">
                      <div className="font-semibold">{item.name}</div>
                      <div className="text-sm text-gray-500">{item.brand} • {item.category}</div>
                    </div>
                    <div className="flex items-center gap-2">
                      <input type="number" value={item.qty} min={1} max={item.stock} onChange={e => updateQty(item.id, Number(e.target.value))} className="w-20 p-2 border rounded" />
                      <div className="text-sm font-semibold">{(item.price * item.qty).toLocaleString()}₫</div>
                      <button onClick={() => removeFromCart(item.id)} className="px-2 py-1 border rounded">Xóa</button>
                    </div>
                  </div>
                ))}

                <div className="flex items-center justify-between pt-4 border-t">
                  <div className="text-sm text-gray-600">Ghi chú đơn hàng</div>
                  <button className="bg-sky-600 text-white px-4 py-2 rounded">Thanh toán</button>
                </div>
              </div>
            )}
          </div>
        </div>
      )}
    </div>
  )
}
